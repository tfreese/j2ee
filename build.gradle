// Execute Tasks in SubModule: gradle MODUL:clean build
//buildscript {
//    repositories {
//        mavenLocal()
//        mavenCentral()
//        gradlePluginPortal()
//    }
//
//    dependencies {
//        classpath("de.freese.gradle:gradle-plugins:$version_myConventionPlugin")
//        classpath("io.openliberty.tools:liberty-gradle-plugin:$version_libertyGradlePlugin")
//        classpath("io.spring.gradle:dependency-management-plugin:$version_springDependencyManagement")
//    }
//}

plugins {
    id "de.freese.gradle.plugin.conventions" version "$version_myConventionPlugin" apply false
    id "io.spring.dependency-management" version "$version_springDependencyManagement" apply false
    id "io.openliberty.tools.gradle.Liberty" version "$version_libertyGradlePlugin" apply false
}

subprojects {
    apply plugin: "base"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "de.freese.gradle.plugin.conventions"

    dependencyManagement {
        imports {
            mavenBom("com.amazonaws:aws-java-sdk-bom:$version_amazonAws")
            mavenBom("org.springframework.boot:spring-boot-dependencies:$version_springBoot")
        }

        dependencies {
            dependency("io.openliberty.api:io.openliberty.transaction:$version_openlibertyApi")
            dependency("jakarta.platform:jakarta.jakartaee-api:$version_jakarta")
        }
    }

    afterEvaluate { project ->
        if (project.plugins.hasPlugin("java") || project.plugins.hasPlugin("java-library") || project.plugins.hasPlugin("application")) {
            dependencies {
                //implementation(platform("de.freese:maven-bom:$version_mavenBom"))

                testImplementation("org.junit.jupiter:junit-jupiter")
                testRuntimeOnly("org.junit.platform:junit-platform-launcher")
            }
        }
    }
}
