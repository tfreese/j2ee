/**
 * This class is generated by jOOQ
 */
package de.freese.jooql.tables;

import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import de.freese.jooql.Keys;
import de.freese.jooql.Public;
import de.freese.jooql.tables.records.TPersonRecord;

/**
 * This class is generated by jOOQ.
 */
@Generated(value =
{
        "http://www.jooq.org", "jOOQ version:3.8.2"
}, comments = "This class is generated by jOOQ")
@SuppressWarnings(
{
        "all", "unchecked", "rawtypes"
})
public class TPerson extends TableImpl<TPersonRecord>
{
    /**
     *
     */
    private static final long serialVersionUID = -1696379677;

    /**
     * The reference instance of <code>PUBLIC.T_PERSON</code>
     */
    public static final TPerson T_PERSON = new TPerson();

    /**
     * The column <code>PUBLIC.T_PERSON.MY_ID</code>.
     */
    public final TableField<TPersonRecord, Long> MY_ID = createField("MY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.T_PERSON.NAME</code>.
     */
    public final TableField<TPersonRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(25), this, "");

    /**
     * The column <code>PUBLIC.T_PERSON.VORNAME</code>.
     */
    public final TableField<TPersonRecord, String> VORNAME = createField("VORNAME", org.jooq.impl.SQLDataType.VARCHAR.length(25), this, "");

    /**
     * Create a <code>PUBLIC.T_PERSON</code> table reference
     */
    public TPerson()
    {
        this("T_PERSON", null);
    }

    /**
     * Create an aliased <code>PUBLIC.T_PERSON</code> table reference
     */
    public TPerson(final String alias)
    {
        this(alias, T_PERSON);
    }

    /**
     * Erstellt ein neues {@link TPerson} Object.
     *
     * @param alias
     * @param aliased
     */
    private TPerson(final String alias, final Table<TPersonRecord> aliased)
    {
        this(alias, aliased, null);
    }

    /**
     * Erstellt ein neues {@link TPerson} Object.
     *
     * @param alias
     * @param aliased
     * @param parameters
     */
    private TPerson(final String alias, final Table<TPersonRecord> aliased, final Field<?>[] parameters)
    {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * @see org.jooq.impl.TableImpl#as(java.lang.String)
     */
    @Override
    public TPerson as(final String alias)
    {
        return new TPerson(alias, this);
    }

    /**
     * @see org.jooq.impl.TableImpl#getKeys()
     */
    @Override
    public List<UniqueKey<TPersonRecord>> getKeys()
    {
        return Arrays.<UniqueKey<TPersonRecord>> asList(Keys.SYS_PK_10107);
    }

    /**
     * @see org.jooq.impl.TableImpl#getPrimaryKey()
     */
    @Override
    public UniqueKey<TPersonRecord> getPrimaryKey()
    {
        return Keys.SYS_PK_10107;
    }

    /**
     * @see org.jooq.impl.TableImpl#getRecordType()
     */
    @Override
    public Class<TPersonRecord> getRecordType()
    {
        return TPersonRecord.class;
    }

    /**
     * @see org.jooq.impl.TableImpl#getSchema()
     */
    @Override
    public Schema getSchema()
    {
        return Public.PUBLIC;
    }

    /**
     * Rename this table
     */
    public TPerson rename(final String name)
    {
        return new TPerson(name, null);
    }
}
