/**
 * This class is generated by jOOQ
 */
package de.freese.jooql.tables.records;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import de.freese.jooql.tables.TPerson;
import de.freese.jooql.tables.interfaces.ITPerson;

/**
 * This class is generated by jOOQ.
 */
@Generated(value =
{
        "http://www.jooq.org", "jOOQ version:3.8.2"
}, comments = "This class is generated by jOOQ")
@SuppressWarnings(
{
        "all", "unchecked", "rawtypes"
})
@Entity
@Table(name = "T_PERSON", schema = "PUBLIC")
public class TPersonRecord extends UpdatableRecordImpl<TPersonRecord> implements Record3<Long, String, String>, ITPerson
{
    /**
     *
     */
    private static final long serialVersionUID = -941004766;

    /**
     * Create a detached TPersonRecord
     */
    public TPersonRecord()
    {
        super(TPerson.T_PERSON);
    }

    /**
     * Create a detached, initialised TPersonRecord
     */
    public TPersonRecord(final Long myId, final String name, final String vorname)
    {
        super(TPerson.T_PERSON);

        set(0, myId);
        set(1, name);
        set(2, vorname);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1()
    {
        return TPerson.T_PERSON.MY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2()
    {
        return TPerson.T_PERSON.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3()
    {
        return TPerson.T_PERSON.VORNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, String> fieldsRow()
    {
        return (Row3) super.fieldsRow();
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(final ITPerson from)
    {
        setMyId(from.getMyId());
        setName(from.getName());
        setVorname(from.getVorname());
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>PUBLIC.T_PERSON.MY_ID</code>.
     */
    @Id
    @Column(name = "MY_ID", unique = true, nullable = false, precision = 64)
    @NotNull
    @Override
    public Long getMyId()
    {
        return (Long) get(0);
    }

    /**
     * Getter for <code>PUBLIC.T_PERSON.NAME</code>.
     */
    @Column(name = "NAME", length = 25)
    @Size(max = 25)
    @Override
    public String getName()
    {
        return (String) get(1);
    }

    /**
     * Getter for <code>PUBLIC.T_PERSON.VORNAME</code>.
     */
    @Column(name = "VORNAME", length = 25)
    @Size(max = 25)
    @Override
    public String getVorname()
    {
        return (String) get(2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITPerson> E into(final E into)
    {
        into.from(this);
        return into;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key()
    {
        return (Record1) super.key();
    }

    /**
     * Setter for <code>PUBLIC.T_PERSON.MY_ID</code>.
     */
    @Override
    public TPersonRecord setMyId(final Long value)
    {
        set(0, value);
        return this;
    }

    /**
     * Setter for <code>PUBLIC.T_PERSON.NAME</code>.
     */
    @Override
    public TPersonRecord setName(final String value)
    {
        set(1, value);
        return this;
    }

    /**
     * Setter for <code>PUBLIC.T_PERSON.VORNAME</code>.
     */
    @Override
    public TPersonRecord setVorname(final String value)
    {
        set(2, value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1()
    {
        return getMyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPersonRecord value1(final Long value)
    {
        setMyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2()
    {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPersonRecord value2(final String value)
    {
        setName(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3()
    {
        return getVorname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPersonRecord value3(final String value)
    {
        setVorname(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public TPersonRecord values(final Long value1, final String value2, final String value3)
    {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, String> valuesRow()
    {
        return (Row3) super.valuesRow();
    }
}
