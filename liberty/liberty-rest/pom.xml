<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.freese.j2ee.liberty</groupId>
        <artifactId>liberty</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>liberty-rest</artifactId>
    <packaging>war</packaging>

    <name>${project.groupId} - ${project.artifactId}</name>
    <description>Demo f√ºr REST-Services</description>
    <!-- https://openliberty.io/guides/rest-intro.html -->
    <!-- https://github.com/openliberty/guide-rest-intro -->

    <properties>
        <liberty.configDirectory>${basedir}/conf</liberty.configDirectory>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <warContext>${project.artifactId}</warContext>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>${project.artifactId}</warName>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>
            <!-- mvn clean liberty:clean-server liberty:run liberty:stop -->
            <!-- liberty:stop -->
            <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <configuration>
                    <assemblyArtifact>
                        <groupId>io.openliberty</groupId>
                        <artifactId>openliberty-runtime</artifactId>
                        <version>${version_io.openliberty}</version>
                        <type>zip</type>
                    </assemblyArtifact>
                    <assemblyInstallDirectory>${java.io.tmpdir}/liberty</assemblyInstallDirectory>
                    <serverName>${project.artifactId}</serverName>
                    <stripVersion>true</stripVersion>
                    <appsDirectory>apps</appsDirectory>
                    <configDirectory>${liberty.configDirectory}/wl_config</configDirectory>
                    <looseApplication>true</looseApplication>
                    <installAppPackages>project</installAppPackages>
                    <jvmOptions>
                        <param>-Xmx256m</param>
                    </jvmOptions>
                    <bootstrapProperties>
                        <default.http.port>${testServerHttpPort}</default.http.port>
                        <default.https.port>${testServerHttpsPort}</default.https.port>
                        <app.context.root>${warContext}</app.context.root>
                    </bootstrapProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>stop-server-before-clean</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-server</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>install-server</goal>
                            <goal>create</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install-apps</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                    <!-- JUnit braucht laufenden Server -->
                    <execution>
                        <id>test-start-server</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>test-start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-stop-server</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>test-stop</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package-server</id>
                        <phase>package</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- compile scope -->
        <!-- runtime scope -->
        <!-- provided scope -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- test scope -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Implementation for jakarta.ws.rs.client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
