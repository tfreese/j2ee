# ==============================================================================
# Aufruf mit: jboss-cli.sh --file=jBossConfigure.cli
# ==============================================================================

connect

# ==============================================================================
# Logging
# Falls es Probleme mit der Security gibt, kann das Log-Level des Handlers
# angepasst werden.
# ==============================================================================
/subsystem=logging/console-handler=CONSOLE.SECURITY:add
/subsystem=logging/console-handler=CONSOLE.SECURITY:write-attribute(name=level,value=INFO)
/subsystem=logging/console-handler=CONSOLE.SECURITY:write-attribute(name=autoflush,value=true)
/subsystem=logging/console-handler=CONSOLE.SECURITY:write-attribute(name=formatter,value="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%E%n")
/subsystem=logging/logger=org.jboss.security:add
/subsystem=logging/logger=org.jboss.security:write-attribute(name=level,value=TRACE)
/subsystem=logging/logger=org.jboss.security:write-attribute(name=use-parent-handlers,value=false)
/subsystem=logging/logger=org.jboss.security:add-handler(name=CONSOLE.SECURITY)

# ==============================================================================
# Trace JDBC statements
# ==============================================================================
/subsystem=logging/logger=jboss.jdbc.spy/:add(level=TRACE)

# ==============================================================================
# Trace connection pool
# Hat noch nicht funktioniert, siehe auch
# http://www.mastertheboss.com/jboss-server/jboss-datasource/how-to-trace-jdbc-statements-with-jboss-as
# ==============================================================================
/subsystem=jca/cached-connection-manager=cached-connection-manager/:write-attribute(name=error,value=true)

# ==============================================================================
# Security domain
# ==============================================================================
# Anlegen einer neuen Security-DomÃ¤ne
/subsystem=security/security-domain=Monitor:add(cache-type=default)

# Standard-Authentisierung
/subsystem=security/security-domain=Monitor/authentication=classic:add

# DB-Login-Module mit Queries konfigurieren
# ACHTUNG:
#	Die datasource wird als WEB-INF/monitor-ds.xml deployed, die Deklaration
#	ist zu finden in src/main/webapp/WEB-INF/monitor-ds.xml
/subsystem=security/security-domain=Monitor/authentication=classic/login-module=MonitorDBLogin:add \
(	flag=required, \
	code=org.jboss.security.auth.spi.DatabaseServerLoginModule, \
	module-options= \
	[ \
		dsJndiName => "java:jboss/datasources/MonitorDs", \
		principalsQuery => "SELECT PASSWORD FROM CM_USER WHERE LOGIN = ?", \
		rolesQuery => "SELECT R.NAME, 'Roles' FROM CM_ROLE_CM_USER RU INNER JOIN CM_ROLE R ON R.ID = RU.ROLES_ID INNER JOIN CM_USER U ON U.ID = RU.USERS_ID WHERE U.LOGIN = ?" \
	] \
)

# ==============================================================================
# Restarbeiten
# ==============================================================================
reload

quit
